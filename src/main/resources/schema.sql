CREATE TABLE IF NOT EXISTS mpa (
    mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS genre (
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(30) NOT NULL,
    description varchar(200) DEFAULT 'No description',
    release_date timestamp,
    duration INTEGER
);

CREATE TABLE IF NOT EXISTS film_genres (
    film_id INTEGER;
    FOREIGN KEY (film_id) REFERENCES films (film_id),
    genre_id INTEGER;
    FOREIGN KEY (genre_id) REFERENCES genre (genre_id),
);

CREATE TABLE IF NOT EXISTS film_mpa (
    film_id INTEGER;
    FOREIGN KEY (film_id) REFERENCES films (film_id),
    mpa_id INTEGER;
    FOREIGN KEY (mpa_id) REFERENCES mpa (mpa_id),
);

CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) NOT NULL,
    email varchar(40) NOT NULL,
    login varchar(30) NOT NULL,
    birthday timestamp
);


CREATE TABLE IF NOT EXISTS users_liked (
    film_id INTEGER,
    FOREIGN KEY (film_id) REFERENCES films (film_id),
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS friends_confirmed (
    user_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    friend_id INTEGER,
    FOREIGN KEY (friend_id) REFERENCES users(user_id)
);

CREATE TABLE IF NOT EXISTS friends_not_confirmed (
    user_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    friend_id INTEGER,
    FOREIGN KEY (friend_id) REFERENCES users(user_id)
);